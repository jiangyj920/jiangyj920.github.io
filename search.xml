<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-Encrypt测试帖</title>
      <link href="/2019/08/08/hexo-Encrypt%E6%B5%8B%E8%AF%95%E5%B8%96/"/>
      <url>/2019/08/08/hexo-Encrypt%E6%B5%8B%E8%AF%95%E5%B8%96/</url>
      
        <content type="html"><![CDATA[<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="在此输入密码，若不知，请与我联系。QQ:864814035" />    <label for="pass">在此输入密码，若不知，请与我联系。QQ:864814035</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX18zvHgozPhEXlFAXxTUC5D3Wkra1AHzPQA=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Hexo Admin写的第一篇帖子</title>
      <link href="/2019/08/08/%E7%94%A8-Hexo-Admin%E5%86%99%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%B8%96%E5%AD%90/"/>
      <url>/2019/08/08/%E7%94%A8-Hexo-Admin%E5%86%99%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%B8%96%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="在此输入密码，若不知，请与我联系。QQ:864814035" />    <label for="pass">在此输入密码，若不知，请与我联系。QQ:864814035</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19aBu3ZwIb9jaXN2cHXRaOtl7T+1O6CNfOEV2errjASAhHSK2UmNwZyp6emabfK5bvI7WJ4suq9ztNvM+XTgxqzRsyBKWCr7gosZ0Kj1cLBQNY6TksdAlN2xf+nG9UkzKVaM4fdZq+w4A3HNOfrS3YCgtDL5h0W8EE0fyXLjEFYxQf5nrW3CqOobSms5QIPKBBmXt2wg98+mu0NXjpKLhkAY7yk5vM4agUptaldG/e82wOXD4T/hKrWp05BG8EA2XkZd6v+j56MAMViu5qZmKz1UUkSsrnKJ8bp/Kng/RTfvUhEAtetS6UuPcpZ1IESTYq24Ss+UNeGFtbss9qJhSml7M9gft79GaBJOroS4f/yr+QkbI5jpIpYs/o8Jmw3TK8Ijk+n90R6ybsO9WV9A/YizPS+xkeN0CO0QBin/4+Q9j9LIsWkwudg8hvjGNeVQRX/p1w5cL6bLQk+DKSJthgJtuwFP6Zvq4wG5s595OKRajFrE1YStGyvXpxbXVmsU5UfzE+jijztF697KBzZIIlHovFuZ1mwArMWFIcZgumu/dmtWkatVBAZU909e/vfelQ2+p6Ap5Gp/7LMQ2u4tGZD7FPxj1mNSAS9JR2IJvT3mXFwrOIiiZJdPG4iwNMJGP1Pg1HtdJ5HSN+aj/8ICeQtZfFK8yFuUjQ8daorwaieAPj6xKToRL0UfRNTyS1MKiT8Xqdyqm0KowRmbuJL97eebrJR+WYIlO54SxtjUpnDhh6z+sw0fSgWOKDPC96LnCO1YSV6w16LKBi3woqDDGNCJnqbKbWAlCMNO8MU3Ebd4cU31p48/IEGPzQOs9UgKrg2r9cNEu2P/a4uOyMleiBSzodDQKuoQDnykkV9ZTwLwiKm0DRb3S6Z6O1IQLuzTal/IVWWRdRvt7Ic0X98TGQzESZNCucAsIZv/4BCcw2P00JTlShKZ27Z7oflkCOlKxTG+Grl2leHNGLFKr1T2E7EzQDTP/Z6A4lz86AbRn5Vr329MmXWq4ZUE6uItF9NcsinX5sZcxzsXu69hLuzwm82OLFtQ3EKCqi5QHZtDufDfWzGr7xCsYm1YuItXCtlmUkDQkFBByz+3+gJ4UtcIxf6KuoTokRwlFrKtM2dgU3+eeIsB6c5JzLcwFWImavBsB/0q28gzxRGpOKZiBHx2UhEug0IbDjidd4Bv/DPY9ZIQ6+cWDAjZdgNnnkoMHwf/TuHfGahR0WZ3Q8+P6lyHWQE3vXyOxqfNTSiplh4S9qo1nYnvwhmSJz0</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2019/08/08/test/"/>
      <url>/2019/08/08/test/</url>
      
        <content type="html"><![CDATA[<span id="busuanzi_container_page_pv">  累计阅读<span id="busuanzi_value_page_pv"><i class="fa fa-spinner fa-spin"></i></span>次</span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>201906浙江工业大学计算机学院转专业二志愿机试题目</title>
      <link href="/2019/08/07/201906%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%BA%8C%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
      <url>/2019/08/07/201906%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%BA%8C%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>因为转专业可以报两个志愿，所以这次带来了二志愿的题目，难度并没有变化太多，这次很幸运通过了机试，但又倒在了面试上，遗憾之情难以言表，下次再来8 </p></blockquote><table><thead><tr><th>题号</th><th>题目</th></tr></thead><tbody><tr><td>2097 Problem A</td><td>祝你一切顺利</td></tr><tr><td>2098 Problem B</td><td>字符处理机器</td></tr><tr><td>2099 Problem C</td><td>如何分解合数</td></tr><tr><td>2100 Problem D</td><td>旋转杨辉三角</td></tr><tr><td>2101 Problem E</td><td>铁打营盘流水兵</td></tr></tbody></table><h2 id="Problem-A-祝你一切顺利"><a href="#Problem-A-祝你一切顺利" class="headerlink" title="Problem A: 祝你一切顺利"></a>Problem A: 祝你一切顺利</h2><p><kbd>Description</kbd></p><p>很高兴你想加入计算机学院这个大家庭，在此献上学院对你的衷心祝福：无论未来有无风雨，均愿你一切如意!<br><kbd>Input</kbd></p><p>无输入</p><p><kbd>Output</kbd></p><p>输出样本示范内容，行末回车。</p><p><kbd>Sample Output</kbd></p><p>==Wish you everything goes well in the future!==</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Wish you everything goes well in the future!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-B-字符处理机器"><a href="#Problem-B-字符处理机器" class="headerlink" title="Problem B:字符处理机器"></a>Problem B:字符处理机器</h2><p><kbd>Description</kbd></p><p>有一台字符处理机器，输入一个字符串（串长小于500），就做如下处理：<br>1）大写字母处理为对应的小写字母，小写字母处理为对应的大写字母；<br>2）数字字符处理为加前缀*，如‘3’加工为 *3 ;<br>3）空格处理为’#’；<br>4）其他字符处理为’?’。<br>然后输出处理后的内容。请你来造一台这样的机器吧！</p><p><kbd>Input</kbd></p><p>按行输入多个字符串。</p><p><kbd>Output</kbd></p><p>对每一行字符串均按字符处理机器的要求工作，输出处理结果，行末回车。</p><p><kbd>Sample Input</kbd></p><p>I'm a good student.<br>My phone number is #123456789#<br>AbCd &<em>! 34y34 80 H6^7</em>GH</p><p><kbd>Sample Output</kbd></p><p>i?M#A#GOOD#STUDENT?<br>mY#PHONE#NUMBER#IS#?<em>1</em>2<em>3</em>4<em>5</em>6<em>7</em>8<em>9?<br>aBcD#???#</em>3<em>4Y</em>3<em>4#</em>8<em>0#h</em>6?*7?gh</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="keyword">char</span> a[<span class="number">502</span>];</span><br><span class="line">    <span class="keyword">while</span>(gets(a))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> tmp[<span class="number">1002</span>];</span><br><span class="line">    <span class="keyword">int</span> s=<span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=<span class="number">65</span>&amp;&amp;a[i]&lt;=<span class="number">90</span>) tmp[p++]=a[i]+<span class="number">32</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">islower</span>(a[i])!=<span class="number">0</span>) tmp[p++]=a[i]<span class="number">-32</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isdigit</span>(a[i])!=<span class="number">0</span>) &#123;</span><br><span class="line">            tmp[p++]=<span class="string">'*'</span>; tmp[p++]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="string">' '</span>) tmp[p++]=<span class="string">'#'</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp[p++]=<span class="string">'?'</span>;         </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;i++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;tmp[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;          </span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-C-如何分解合数"><a href="#Problem-C-如何分解合数" class="headerlink" title="Problem C:如何分解合数"></a>Problem C:如何分解合数</h2><p><kbd>Description</kbd></p><p>在数学里有个基本定理：任意一个大于1的合数都可以分解成有限个素数（质数）的乘积，且分解是唯一的。证明挺麻烦，但是我们可以用计算机来验证。请你来试一试!</p><p><kbd>Input</kbd></p><p>输入若干合数（>2），输入0表示输入结束。</p><p><kbd>Output</kbd></p><p>对于每个有效的正整数输入，输出其分解为若干个素数乘积的表达式，表达式因子按升序（从小到大）输出。一个表达式一行。</p><p><kbd>Sample Input</kbd></p><p>==45 36 34 18 420 0==</p><p><kbd>Sample Output</kbd></p><p><img src="https://img-blog.csdnimg.cn/20190704125348768.png" alt></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">a</span><span class="params">(<span class="keyword">int</span>  a)</span></span>&#123;</span><br><span class="line"> <span class="keyword">int</span>  i;</span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;a; ++i)</span><br><span class="line">  <span class="keyword">if</span>(a%i == <span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span>  n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;n; ++i)</span><br><span class="line">  <span class="keyword">if</span>(n%i == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">"*"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(a(n/i))</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">cout</span>&lt;&lt;n/i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     F(n/i);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>  n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="string">"="</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;n; ++i)</span><br><span class="line">  <span class="keyword">if</span>(n%i == <span class="number">0</span>)</span><br><span class="line">       &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">"*"</span>;</span><br><span class="line">    <span class="keyword">if</span>(a(n/i))</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="built_in">cout</span>&lt;&lt;n/i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     F(n/i);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">else</span> f(n);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-D-旋转杨辉三角"><a href="#Problem-D-旋转杨辉三角" class="headerlink" title="Problem D:旋转杨辉三角"></a>Problem D:旋转杨辉三角</h2><p><kbd>Description</kbd></p><p>杨辉三角是一个由数字排列成的三角形数表。其实在杨辉记录之前是由北宋人贾宪率先使用的。因此也称为贾宪三角。贾宪三角最初用作高阶开方运算，为我们现在看到的杨辉三角旋转45度得到。现在来请你重现贾宪当年使用的模样。</p><p><kbd>Input</kbd></p><p>多行输入，每行输入一个自然数(n<20)，一个可显示字符。< p><p><kbd>Output</kbd></p><p>对应每个自然数n, 字符c，输出由c构成的旋转后的杨辉三角。每行每个杨辉三角值对应输出若干字符c, 输出各值之间间隔1个空格。行末回车。</p><p>例如，输入3 a</p><p>则对应旋转后的杨辉三角<br>1 1 1<br>1 2<br>1<br>于是输出<br>a a a<br>a aa<br>a</p><p><kbd>Sample Input</kbd></p><p>==4 *==<br>==6 T==</p><p><kbd>Sample Output</kbd></p><p>==* * * <em>==<br>==</em> <em>* ***==<br>==</em> <em>**==<br>==</em>==<br>==T T T T T T==<br>==T TT TTT TTTT TTTTT==<br>==T TTT TTTTTT TTTTTTTTTT==<br>==T TTTT TTTTTTTTTT==<br>==T TTTTT==<br>==T==</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(n--)</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt;c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> n;<span class="keyword">char</span> c;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;c)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line">  a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">0</span>||j==i)a[i][j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> a[i][j]=a[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i<span class="number">-1</span>][j];</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">    print(a[i][i-k],c);</span><br><span class="line">    <span class="keyword">if</span>(i!=n<span class="number">-1</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>; </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;  </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-E-铁打营盘流水兵"><a href="#Problem-E-铁打营盘流水兵" class="headerlink" title="Problem E:铁打营盘流水兵"></a>Problem E:铁打营盘流水兵</h2><p><kbd>Description</kbd></p><p>某部队在某地驻扎了10个营帐，编号分别为1,2,3,4,5,6,7,8,9,10, 每个营帐最初有若干战士。不打仗时, 每天由于训练导致的非战斗减员为1%；打仗时，每天的战斗减员为10% （减员人数四舍五入凑整，如减员1.4人为实际减员1人，减员1.5人为实际减员2人）。当营帐中的战士减员到50人以内，则由上级部队调派200新兵补充。现在部队需要知道军中士兵的分布情况，会隔若干天就派人去巡视各营帐，然后出报表呈给司令员过目。你来做这件事吧！</p><p><kbd>Input</kbd></p><p>多组输入。每组输入天数，按营帐编号顺序输入战士数, 天数对应的0,1序列（0表示当天不战斗，1表示当天战斗）。</p><p><kbd>Output</kbd></p><p>对应输入数据，给出巡视那天的战士排序报表，按格式“营帐号:人数”降序给出，不同营帐人数相同时按营帐号升序（从小到大）给出。具体格式参考样本输出。</p><p><kbd>Sample Input<br>==26==<br>==100 200 300 400 500 600 700 800 900 1000==<br>==1 1 1 1 0 0 0 1 1 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1==<br>==3==<br>==55 67 123 87 50 76 60 90 421 303==<br>==0 1 1==</kbd></p><p><kbd>Sample Output</kbd></p><p>==3:220 2:146 10:139 9:125 8:110 7:97 6:84 1:68 5:68 4:55==<br>==9:337 7:248 10:243 1:224 5:202 3:99 8:72 4:69 6:60 2:53==</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">wars</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> mans;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">rule</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> wars &amp; a,<span class="keyword">const</span> wars &amp; b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.mans!=b.mans) <span class="keyword">return</span> a.mans&gt;b.mans;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="keyword">int</span> man[<span class="number">10</span>];</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;day)</span><br><span class="line">    &#123;   <span class="built_in">multiset</span>&lt;wars,rule &gt; st;</span><br><span class="line">    <span class="keyword">int</span> *war=<span class="keyword">new</span> <span class="keyword">int</span>[day];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="built_in">cin</span>&gt;&gt;man[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;day;i++)<span class="built_in">cin</span>&gt;&gt;war[i];</span><br><span class="line">        <span class="keyword">int</span> q=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(q&lt;day)</span><br><span class="line">        &#123; <span class="keyword">int</span> tmp=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(war[q]==<span class="number">1</span>)   &#123;</span><br><span class="line">                    <span class="keyword">double</span> x=man[i]*<span class="number">0.1</span>;</span><br><span class="line">                 tmp=(x*<span class="number">2</span>+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                    man[i]-=tmp;</span><br><span class="line">                    &#125;</span><br><span class="line">                     </span><br><span class="line">                <span class="keyword">else</span>    &#123;</span><br><span class="line">                <span class="keyword">double</span> y=man[i]*<span class="number">0.01</span>;</span><br><span class="line">                 tmp=(y*<span class="number">2</span>+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                    man[i]-=tmp;&#125;</span><br><span class="line">         </span><br><span class="line">                 </span><br><span class="line">                    <span class="keyword">if</span>(man[i]&lt;<span class="number">50</span>) man[i]+=<span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                q++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            wars tmp;</span><br><span class="line">            tmp.mans=man[i];</span><br><span class="line">            tmp.id=i+<span class="number">1</span>;</span><br><span class="line">            st.insert(tmp);</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span>&lt;wars,rule&gt;::iterator k=st.begin();</span><br><span class="line">        <span class="keyword">for</span>(;k!=st.end();k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;k-&gt;id&lt;&lt;<span class="string">":"</span>&lt;&lt;k-&gt;mans&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="busuanzi_container_page_pv">  累计阅读<span id="busuanzi_value_page_pv"><i class="fa fa-spinner fa-spin"></i></span>次</span></20)，一个可显示字符。<></p>]]></content>
      
      
      
        <tags>
            
            <tag> 转专业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>201905浙江工业大学计算机学院转专业一志愿机试题目</title>
      <link href="/2019/08/07/201905%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%B8%80%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE/"/>
      <url>/2019/08/07/201905%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%B8%80%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转专业机试结束了，发挥并不理想，自己感觉挺遗憾的，毕竟准备了很久，只能下次再来了。这次题目难度中等，与通关考相当。现在把这些题目分享出来，希望对想要转专业的朋友有帮助。如果还想继续练习的话，可以到<a href="http://acm.zjut.edu.cn/onlinejudge/problemset.php?page=4" target="_blank" rel="noopener">浙工大onlinejudge</a>练习。祝大家一路顺利，天天开心。</p></blockquote><table><thead><tr><th>题号</th><th>题目</th></tr></thead><tbody><tr><td>2080 Problem A</td><td>计算机学院欢迎你</td></tr><tr><td>2081 Problem B</td><td>破解字符串的秘密</td></tr><tr><td>2082 Problem C</td><td>各种数制转换问题</td></tr><tr><td>2083 Problem D</td><td>年月日的一个巧合</td></tr><tr><td>2084 Problem E</td><td>找亲密数对的游戏</td></tr></tbody></table><h2 id="Problem-A-计算机学院欢迎你"><a href="#Problem-A-计算机学院欢迎你" class="headerlink" title="Problem A: 计算机学院欢迎你"></a>Problem A: 计算机学院欢迎你</h2><p><kbd>Description</kbd></p><p>请让电脑表达计算机学院对你的欢迎之情吧！</p><p><kbd>Input</kbd></p><p>无输入。</p><p><kbd>Output</kbd></p><p>输出样本示范内容，行末要回车。</p><p><kbd>Sample Input</kbd></p><p>无</p><p><kbd>Sample Output</kbd></p><p>==Welcome to College of Computer Science & Technology!==</p><blockquote><p>这道题就是输出一个字符串，别忘了加换行</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Welcome to College of Computer Science &amp; Technology!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-B-破解字符串的秘密"><a href="#Problem-B-破解字符串的秘密" class="headerlink" title="Problem B: 破解字符串的秘密"></a>Problem B: 破解字符串的秘密</h2><p><kbd>Description</kbd></p><p>编程高手能轻松破解任意字符串的秘密：一个字符串由多少数字字符、大写字母字符、小写字母字符、空格字符、其他字符构成。你也来试试看吧！</p><p><kbd>Input</kbd></p><p>按行输入多个字符串。</p><p><kbd>Output</kbd></p><p>对每一行字符串分别统计数字字符(D)、大写字母字符(B)、小写字母字符(S)、空格字符(K)、其他字符的个数(T)，并输出。每行对应的输出以括号中的提示字母开头，然后跟统计值，行末回车。</p><p><kbd>Sample Input</kbd></p><p>==Jennie Is A Nice Girl. She Is 18 Years Old.==<br>==??Really?&*AbaC% appE !==<br>==1 a 2 A 3 $b+123==</p><p><kbd>Sample Output</kbd></p><p>==D2B9S21K9T2==<br>==D0B4S10K2T7==<br>==D6B1S2K5T2==</p><blockquote><p>这是一道基础的字符串处理题，注意要用gets读入整行字符串，因为字符串内包含空格，而scanf和cin遇空格会停止读入，然后遍历整个字符串就好了</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">char</span> p[<span class="number">1000</span>];</span><br><span class="line"> <span class="keyword">while</span>(gets(p))<span class="comment">//不停读入字符串</span></span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">int</span> s=<span class="built_in">strlen</span>(p);</span><br><span class="line">  <span class="keyword">int</span> num=<span class="number">0</span>;    <span class="comment">//以下五个变量用作计数器</span></span><br><span class="line">  <span class="keyword">int</span> alpha=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> Alpha=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> space=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> Else=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s;i++)<span class="comment">//遍历字符串</span></span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">isdigit</span>(p[i])!=<span class="number">0</span>)num++;</span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">isupper</span>(p[i])!=<span class="number">0</span>) Alpha++;</span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">islower</span>(p[i])!=<span class="number">0</span>) alpha++;</span><br><span class="line">   <span class="keyword">if</span>(p[i]==<span class="string">' '</span>) space++; </span><br><span class="line">  &#125;</span><br><span class="line">  Else=s-num-Alpha-alpha-space; <span class="comment">//用总长减去前面的就是其他字符的数量</span></span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"D"</span>&lt;&lt;num&lt;&lt;<span class="string">"B"</span>&lt;&lt;Alpha&lt;&lt;<span class="string">"S"</span>&lt;&lt;alpha&lt;&lt;<span class="string">"K"</span>&lt;&lt;space&lt;&lt;<span class="string">"T"</span>&lt;&lt;Else&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-C-各种数制转换问题"><a href="#Problem-C-各种数制转换问题" class="headerlink" title="Problem C: 各种数制转换问题"></a>Problem C: 各种数制转换问题</h2><p><kbd>Description</kbd></p><p>在数制王国里，十进制不是唯一的成员。要怎么才能把十进制数转换为其他数制里的数呢？你有办法吗？</p><p><kbd>Input</kbd></p><p>多组输入，每组输入构成为：</p><p>要转换的数制N（N不大于16的自然数） </p><p><kbd>Output</kbd></p><p>每行给出的M个数，将它们统一转换成N进制数，一行一个。每组用空行分隔。</p><p><kbd>Sample Input</kbd></p><p>==2==<br>==3 1 5 8==<br>==10==<br>==2 123 56==<br>==16==<br>==2 18 4567==<br>==14==<br>==3 45 14 20==</p><p><kbd>Sample Output</kbd></p><p>==1==<br>==101==<br>==1000==</p><p>==123==<br>==56==</p><p>==12==<br>==11D7== </p><p>==33==<br>==10==<br>==16==</p><blockquote><p>这道题其实就三步，一是动态分配一个数组，然后输入要转换的数；二是把待转换的数转换为n进制；三是把转换后的数输出。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> o[<span class="number">16</span>]=&#123;<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>&#125;;</span><br><span class="line"> <span class="comment">//这个数组用与存放最大的16进制中各位所代表的字符</span></span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">int</span> m; <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> *a=<span class="keyword">new</span> <span class="keyword">int</span>[m];<span class="comment">//动态分配数组</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)<span class="comment">//挨个处理数组中的元素</span></span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">int</span> sys[<span class="number">16</span>];</span><br><span class="line">   <span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(a[i]!=<span class="number">0</span>)<span class="comment">//转换为n进值的数，并存进sys字符数组中，注意是倒序的，待会要倒序输出</span></span><br><span class="line">   &#123;  tmp=a[i]%n;</span><br><span class="line">      sys[x++]=o[tmp];</span><br><span class="line">      a[i]/=n;</span><br><span class="line">    </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=x<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)<span class="comment">//倒序输出</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;sys[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-D-年月日的一个巧合"><a href="#Problem-D-年月日的一个巧合" class="headerlink" title="Problem D: 年月日的一个巧合"></a>Problem D: 年月日的一个巧合</h2><p><kbd>Description</kbd></p><p>你有经常看日历的习惯吗?有发现一个数据的巧合吗?就是某个月的1号就是周一。你有用心数过一年里这样的月份有哪些吗？来数数看吧！</p><p><kbd>Input</kbd></p><p>多行输入，每行输入年份Y（Y≥1990，且已知1990的1月1日是周一）。</p><p><kbd>Output</kbd></p><p>对于每个Y，输出Y年哪些月的1号恰好是周一，月份之间用单空格分隔，行末无空格直接回车；没有这样的月份就输出空行；若Y小于1990则输出Data Error。具体格式如样本输出描述。</p><p><kbd>Sample Input</kbd></p><p>==2019==<br>==2022==<br>==2021==<br>==1876==<br>==1998==<br>==1990==</p><p><kbd>Sample Output</kbd></p><p>==4 7==<br>==8==<br>==2 3 11==<br>==Data Error==<br>==6==<br>==1 10==</p><blockquote><p>这是一道很典型的年月日问题，只需要求出1990年1月1日到当前年份每个月的1号一共有多少天，然后对7取余，余数为1即为星期一</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> month[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;<span class="comment">//用于存放每个月</span></span><br><span class="line">                        <span class="comment">//的天数，之后就能直接通过下标来获取当前月份的天数</span></span><br><span class="line"> <span class="keyword">int</span> year;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;year)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">if</span>(year&lt;<span class="number">1900</span>) </span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="string">"Data Error"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> <span class="keyword">else</span>  <span class="comment">//如果是合法年份</span></span><br><span class="line"> &#123;   </span><br><span class="line">  <span class="keyword">int</span> date=<span class="number">1</span>; <span class="comment">//date用于记录总天数</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1900</span>;y&lt;year;y++) <span class="comment">//从1990年开始到当前年份为止，把每年的天数加</span></span><br><span class="line">                                                                <span class="comment">//上去</span></span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">if</span>(y%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y%<span class="number">100</span>!=<span class="number">0</span>||y%<span class="number">400</span>==<span class="number">0</span>)<span class="comment">//这是判断是否为闰年的条件，注意要用y判断，</span></span><br><span class="line">   <span class="comment">//当时机考时我一紧张写成用year判断了，结果导致每一年判断的结果都是输入的那</span></span><br><span class="line">   <span class="comment">//个年份，唉，真是悔不当初。</span></span><br><span class="line">   date+=<span class="number">366</span>;   <span class="comment">//如果上面if中的条件成立，说明是闰年，总天数＋366天</span></span><br><span class="line">   <span class="keyword">else</span> date+=<span class="number">365</span>;  <span class="comment">//否则＋365天</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>||year%<span class="number">400</span>==<span class="number">0</span>) month[<span class="number">2</span>]=<span class="number">29</span>;<span class="comment">//若是闰年，2月份天数</span></span><br><span class="line">                                                      <span class="comment">//改为29天</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++) <span class="comment">//从一月份开始判断，</span></span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">if</span>(date%<span class="number">7</span>==<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;<span class="comment">//如果该月份第一天是星期一，则输出该月份</span></span><br><span class="line">   date+=month[i];    <span class="comment">//总天数加上一个月</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;  <span class="comment">//最后别忘了换行</span></span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Problem-E-找亲密数对的游戏"><a href="#Problem-E-找亲密数对的游戏" class="headerlink" title="Problem E: 找亲密数对的游戏"></a>Problem E: 找亲密数对的游戏</h2><p><kbd>Description</kbd></p><p>你有你的亲密朋友，自然数也有。自然数中的亲密朋友描述如下：有两个不同的自然数a，b， 如果a所有的正因子（包括1但不包括a）之和等于b，b所有的正因子（包括1但不包括b）之和等于a，则a,b就是亲密朋友了，称为亲密数对。现在让我们来玩找亲密数对的游戏吧！</p><p><kbd>Input</kbd></p><p>多行输入，每行输入两个自然数M，N (M<=20000，n<=20000)。< p><p><kbd>Output</kbd></p><p>对于每行输入，输出M~N之间的所有亲密数对数和按a的升序显示所有的亲密数对（没有重复显示），格式为：亲密数对数n：[亲密数a1，亲密数b1] [亲密数a2，亲密数b2]……[亲密数an，亲密数bn]；数据值或者区间不合法，则输出Data Error；没有亲密数对则输出0，行末回车。具体格式参看样本输出。</p><p><kbd>Sample Input</kbd></p><p>==2  3000==<br>==100  2000==<br>==1000 80==<br>==2 3==<br>==3000 10000==</p><p><kbd>Sample Output</kbd></p><p>==3:[220,284] [1184,1210] [2620,2924]==<br>==2:[220,284] [1184,1210]==<br>==Data Error==<br>==0==<br>==2:[5020,5564] [6232,6368]==</p><blockquote><p>这道题暂时做不出来，大佬们自行解决吧</p></blockquote><span id="busuanzi_container_page_pv">  累计阅读<span id="busuanzi_value_page_pv"><i class="fa fa-spinner fa-spin"></i></span>次</span></=20000，n<=20000)。<></p>]]></content>
      
      
      
        <tags>
            
            <tag> 转专业 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
