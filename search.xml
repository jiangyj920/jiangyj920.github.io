<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo-Encrypt测试帖]]></title>
    <url>%2F2019%2F08%2F08%2Fhexo-Encrypt%E6%B5%8B%E8%AF%95%E5%B8%96%2F</url>
    <content type="text"><![CDATA[在此输入密码，若不知，请与我联系。QQ:864814035 Incorrect Password! No content to display! U2FsdGVkX1+S4ZyXLpHEdtEUte4cpPSWIbIfDehEB7L8rLn54CZewhD+co3srg8LkCs7IegNbtZpLpJyW8bdMx0O21IOvgrqmQW3tzMGtwC2FGBKLvzIHkD76JjuSaS4BTGTHGz4aqB1Ti9b7zL64wHwp38fh1HJSpFY/iQlXWexyDWDUJyUbqCxxAf0BTIipGL6IloCWuIz9sSUgjUJpg==]]></content>
      <tags>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用 Hexo Admin写的第一篇帖子]]></title>
    <url>%2F2019%2F08%2F08%2F%E7%94%A8-Hexo-Admin%E5%86%99%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%B8%96%E5%AD%90%2F</url>
    <content type="text"><![CDATA[在此输入密码，若不知，请与我联系。QQ:864814035 Incorrect Password! No content to display! U2FsdGVkX1/MyYA5MceK6kEhFhEDUv0bLL+aKRFneOCyRl/9uj/AeYZjPu8RHEUYKgxCr3gazyMjQcJwRf8qJymRZ/HqHUtunnLz6J8d7VeJcbc1d3QTtec8iLhYJ8GkOmZSULAODRB4r6hwH6ueGiUOe8enrKDpZlWWG09wRmY7m/RnbiKksuF6oxw8WehvW+lUZbvyzqcS/XIKHmKAqe5mfoI5L9B98qpcXGEnEAPjt643ejCeZKZ+NGf6VSRHEAoPpLuIePckKNBKdRQBecL6Uc7/y3h5Xckrpd0iDC7BGHhDKL3UV+9lSQUPNMaYa4ZOyDy8FBcMX9MJ5mFoWq4cKq5r50LIypYPrL2OyTxLQXQnovs/rF/tTGPmRzhAnFPdljVwSzWog7HcMRVMsvsYpQSEl6cxddKZcPYem/l1BMZMVwREHCTdwwKq0SBIZZBy0BXKhkeTM7wZfpwnyUUokxzvCw3iPUkvU9FeyJNKZUHv7jtPe3fkTGPJ5KNzLVIjY696wuq4DTcS0YFqYVrTaH7F4MF2i68GIZuReu58w71xlUCRRh5a8YVZwlGyEB/N/0HhWVgT8s7M76sJvqtZ/y65FM0Cwe6kuNwUB3+9ke56TGLaV88p9Ydtd9HUEP8TPqGLXw9OxmIb/y0PZmqo7HFgHEtPDDcxQNfediiKnATI7y/CQq0okyg32WbRg2Cu0KeSjCd8EoMnfThoIpvHf5iW97pxptNN5P/4JTsX26ZxDqbT7vyKDSHy8ojvZ6/vSI9F7A74PrEEtPW1QXBw6LkCI87Ml65Vyy7MvHnKn3m2Zn7/dR4E68QyM0F1]]></content>
      <tags>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2019%2F08%2F08%2Ftest%2F</url>
    <content type="text"><![CDATA[累计阅读次]]></content>
  </entry>
  <entry>
    <title><![CDATA[201906浙江工业大学计算机学院转专业二志愿机试题目]]></title>
    <url>%2F2019%2F08%2F07%2F201906%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%BA%8C%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[因为转专业可以报两个志愿，所以这次带来了二志愿的题目，难度并没有变化太多，这次很幸运通过了机试，但又倒在了面试上，遗憾之情难以言表，下次再来8 题号 题目 2097 Problem A 祝你一切顺利 2098 Problem B 字符处理机器 2099 Problem C 如何分解合数 2100 Problem D 旋转杨辉三角 2101 Problem E 铁打营盘流水兵 Problem A: 祝你一切顺利Description 很高兴你想加入计算机学院这个大家庭，在此献上学院对你的衷心祝福：无论未来有无风雨，均愿你一切如意!Input 无输入 Output 输出样本示范内容，行末回车。 Sample Output ==Wish you everything goes well in the future!== #include&lt;iostream> using namespace std; int main() { cout&lt;&lt;"Wish you everything goes well in the future!"&lt;&lt;endl; return 0; } Problem B:字符处理机器Description 有一台字符处理机器，输入一个字符串（串长小于500），就做如下处理：1）大写字母处理为对应的小写字母，小写字母处理为对应的大写字母；2）数字字符处理为加前缀*，如‘3’加工为 *3 ;3）空格处理为’#’；4）其他字符处理为’?’。然后输出处理后的内容。请你来造一台这样的机器吧！ Input 按行输入多个字符串。 Output 对每一行字符串均按字符处理机器的要求工作，输出处理结果，行末回车。 Sample Input I'm a good student.My phone number is #123456789#AbCd &! 34y34 80 H6^7GH Sample Output i?M#A#GOOD#STUDENT?mY#PHONE#NUMBER#IS#?123456789?aBcD#???#34Y34#80#h6?*7?gh #include&lt;iostream> #include&lt;cstring> #include&lt;ctype.h> using namespace std; int main() { char a[502]; while(gets(a)) { char tmp[1002]; int s=strlen(a); int p=0; for(int i=0;i&lt;s;i++) { if(a[i]>=65&amp;&amp;a[i]&lt;=90) tmp[p++]=a[i]+32; else if(islower(a[i])!=0) tmp[p++]=a[i]-32; else if(isdigit(a[i])!=0) { tmp[p++]='*'; tmp[p++]=a[i]; } else if(a[i]==' ') tmp[p++]='#'; else tmp[p++]='?'; } for(int i=0;i&lt;p;i++) cout&lt;&lt;tmp[i]; cout&lt;&lt;endl; } return 0; } Problem C:如何分解合数Description 在数学里有个基本定理：任意一个大于1的合数都可以分解成有限个素数（质数）的乘积，且分解是唯一的。证明挺麻烦，但是我们可以用计算机来验证。请你来试一试! Input 输入若干合数（>2），输入0表示输入结束。 Output 对于每个有效的正整数输入，输出其分解为若干个素数乘积的表达式，表达式因子按升序（从小到大）输出。一个表达式一行。 Sample Input ==45 36 34 18 420 0== Sample Output #include&lt;iostream> using namespace std; int a(int a){ int i; for(i=2; i&lt;a; ++i) if(a%i == 0) return 0; return 1; } void F(int n) { for (int i=2; i&lt;n; ++i) if(n%i == 0) { cout&lt;&lt;i&lt;&lt;"*"; if(a(n/i)) { cout&lt;&lt;n/i&lt;&lt;endl; break; } else F(n/i); break; } } void f(long long n) { cout&lt;&lt;n&lt;&lt;"="; for (int i=2; i&lt;n; ++i) if(n%i == 0) { cout&lt;&lt;i&lt;&lt;"*"; if(a(n/i)) { cout&lt;&lt;n/i&lt;&lt;endl; break; } else F(n/i); break; } } int main() { int n; while(cin>>n) { if(n==0) break; else f(n); } return 0; } Problem D:旋转杨辉三角Description 杨辉三角是一个由数字排列成的三角形数表。其实在杨辉记录之前是由北宋人贾宪率先使用的。因此也称为贾宪三角。贾宪三角最初用作高阶开方运算，为我们现在看到的杨辉三角旋转45度得到。现在来请你重现贾宪当年使用的模样。 Input 多行输入，每行输入一个自然数(n using namespace std; void print(int n,char c) { while(n--) cout&lt;&lt;c; } int main() { int n;char c; while(cin>>n>>c) { int a[20][20]; a[0][0]=1; for(int i=0;i&lt;n;i++) { for(int j=0;j&lt;=i;j++) { if(j==0||j==i)a[i][j]=1; else a[i][j]=a[i-1][j-1]+a[i-1][j]; } } for(int k=0;k&lt;n;k++) { for(int i=k;i&lt;n;i++) { print(a[i][i-k],c); if(i!=n-1)cout&lt;&lt;" "; } cout&lt;&lt;endl; } } return 0; } Problem E:铁打营盘流水兵Description 某部队在某地驻扎了10个营帐，编号分别为1,2,3,4,5,6,7,8,9,10, 每个营帐最初有若干战士。不打仗时, 每天由于训练导致的非战斗减员为1%；打仗时，每天的战斗减员为10% （减员人数四舍五入凑整，如减员1.4人为实际减员1人，减员1.5人为实际减员2人）。当营帐中的战士减员到50人以内，则由上级部队调派200新兵补充。现在部队需要知道军中士兵的分布情况，会隔若干天就派人去巡视各营帐，然后出报表呈给司令员过目。你来做这件事吧！ Input 多组输入。每组输入天数，按营帐编号顺序输入战士数, 天数对应的0,1序列（0表示当天不战斗，1表示当天战斗）。 Output 对应输入数据，给出巡视那天的战士排序报表，按格式“营帐号:人数”降序给出，不同营帐人数相同时按营帐号升序（从小到大）给出。具体格式参考样本输出。 Sample Input==26====100 200 300 400 500 600 700 800 900 1000====1 1 1 1 0 0 0 1 1 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1====3====55 67 123 87 50 76 60 90 421 303====0 1 1== Sample Output ==3:220 2:146 10:139 9:125 8:110 7:97 6:84 1:68 5:68 4:55====9:337 7:248 10:243 1:224 5:202 3:99 8:72 4:69 6:60 2:53== #include&lt;iostream> #include&lt;set> using namespace std; struct wars{ int id; int mans; }; struct rule{ bool operator()(const wars &amp; a,const wars &amp; b) { if(a.mans!=b.mans) return a.mans>b.mans; else return a.id&lt;b.id; } }; int main() { int day; int man[10]; while(cin>>day) { multiset&lt;wars,rule > st; int *war=new int[day]; for(int i=0;i&lt;10;i++)cin>>man[i]; for(int i=0;i&lt;day;i++)cin>>war[i]; int q=0; while(q&lt;day) { int tmp=1; for(int i=0;i&lt;10;i++) { if(war[q]==1) { double x=man[i]*0.1; tmp=(x*2+1)/2; man[i]-=tmp; } else { double y=man[i]*0.01; tmp=(y*2+1)/2; man[i]-=tmp;} if(man[i]&lt;50) man[i]+=200; } q++; } for(int i=0;i&lt;10;i++) { wars tmp; tmp.mans=man[i]; tmp.id=i+1; st.insert(tmp); } set&lt;wars,rule>::iterator k=st.begin(); for(;k!=st.end();k++) { cout&lt;&lt;k->id&lt;&lt;":"&lt;&lt;k->mans&lt;&lt;" "; } cout&lt;&lt;endl; } return 0; } 累计阅读次]]></content>
      <tags>
        <tag>转专业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[201905浙江工业大学计算机学院转专业一志愿机试题目]]></title>
    <url>%2F2019%2F08%2F07%2F201905%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%B8%80%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[转专业机试结束了，发挥并不理想，自己感觉挺遗憾的，毕竟准备了很久，只能下次再来了。这次题目难度中等，与通关考相当。现在把这些题目分享出来，希望对想要转专业的朋友有帮助。如果还想继续练习的话，可以到浙工大onlinejudge练习。祝大家一路顺利，天天开心。 题号 题目 2080 Problem A 计算机学院欢迎你 2081 Problem B 破解字符串的秘密 2082 Problem C 各种数制转换问题 2083 Problem D 年月日的一个巧合 2084 Problem E 找亲密数对的游戏 Problem A: 计算机学院欢迎你Description 请让电脑表达计算机学院对你的欢迎之情吧！ Input 无输入。 Output 输出样本示范内容，行末要回车。 Sample Input 无 Sample Output ==Welcome to College of Computer Science & Technology!== 这道题就是输出一个字符串，别忘了加换行 #include&lt;iostream> using namespace std; int main() { cout&lt;&lt;"Welcome to College of Computer Science &amp; Technology!"&lt;&lt;endl; return 0; } Problem B: 破解字符串的秘密Description 编程高手能轻松破解任意字符串的秘密：一个字符串由多少数字字符、大写字母字符、小写字母字符、空格字符、其他字符构成。你也来试试看吧！ Input 按行输入多个字符串。 Output 对每一行字符串分别统计数字字符(D)、大写字母字符(B)、小写字母字符(S)、空格字符(K)、其他字符的个数(T)，并输出。每行对应的输出以括号中的提示字母开头，然后跟统计值，行末回车。 Sample Input ==Jennie Is A Nice Girl. She Is 18 Years Old.====??Really?&*AbaC% appE !====1 a 2 A 3 $b+123== Sample Output ==D2B9S21K9T2====D0B4S10K2T7====D6B1S2K5T2== 这是一道基础的字符串处理题，注意要用gets读入整行字符串，因为字符串内包含空格，而scanf和cin遇空格会停止读入，然后遍历整个字符串就好了 #include&lt;iostream> #include&lt;cstring> #include&lt;ctype.h> using namespace std; int main() { char p[1000]; while(gets(p))//不停读入字符串 { int s=strlen(p); int num=0; //以下五个变量用作计数器 int alpha=0; int Alpha=0; int space=0; int Else=0; for(int i=0;i&lt;s;i++)//遍历字符串 { if(isdigit(p[i])!=0)num++; if(isupper(p[i])!=0) Alpha++; if(islower(p[i])!=0) alpha++; if(p[i]==' ') space++; } Else=s-num-Alpha-alpha-space; //用总长减去前面的就是其他字符的数量 cout&lt;&lt;"D"&lt;&lt;num&lt;&lt;"B"&lt;&lt;Alpha&lt;&lt;"S"&lt;&lt;alpha&lt;&lt;"K"&lt;&lt;space&lt;&lt;"T"&lt;&lt;Else&lt;&lt;endl; } return 0; } Problem C: 各种数制转换问题Description 在数制王国里，十进制不是唯一的成员。要怎么才能把十进制数转换为其他数制里的数呢？你有办法吗？ Input 多组输入，每组输入构成为： 要转换的数制N（N不大于16的自然数） Output 每行给出的M个数，将它们统一转换成N进制数，一行一个。每组用空行分隔。 Sample Input ==2====3 1 5 8====10====2 123 56====16====2 18 4567====14====3 45 14 20== Sample Output ==1====101====1000== ==123====56== ==12====11D7== ==33====10====16== 这道题其实就三步，一是动态分配一个数组，然后输入要转换的数；二是把待转换的数转换为n进制；三是把转换后的数输出。 #include #includeusing namespace std;int main(){char o[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'}; //这个数组用与存放最大的16进制中各位所代表的字符 int n; while(cin>>n) { int m; cin>>m; int *a=new int[m];//动态分配数组 for(int i=0;i>a[i];]]></content>
      <tags>
        <tag>转专业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[about]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[friends]]></title>
    <url>%2Ffriends%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[gallery]]></title>
    <url>%2Fgallery%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[读书]]></title>
    <url>%2Freading%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[关于]]></title>
    <url>%2Fabout%2Findex%20(2).html</url>
    <content type="text"><![CDATA[大家好，我是XXX。欢迎来到我的个人技术博客。 这里用markdown写下你的简介，就跟平时写md一样就可以了。]]></content>
  </entry>
</search>
