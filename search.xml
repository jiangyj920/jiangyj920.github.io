<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo-Encrypt测试帖]]></title>
    <url>%2F2019%2F08%2F08%2Fhexo-Encrypt%E6%B5%8B%E8%AF%95%E5%B8%96%2F</url>
    <content type="text"><![CDATA[在此输入密码，若不知，请与我联系。QQ:864814035 Incorrect Password! No content to display! U2FsdGVkX19U9l4gyhhdSRhZrKWe5gAWsaAyYaL7jgemtbKcWN+VIGahLw84KCjKTnvF0fHW/3aj/wX+Mz2UrCdfyCJIH2zqHF5wl90FuaZQULRgsjhESi/ITYsGG03Kiovpypgxrh1Pe4lflPRQQAlzo/4aWw6ioHAoCmSg+ycgkiuba4bw9E7ykULmDa210xAdowimwbyzTleVvXIu4Q==]]></content>
      <tags>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用 Hexo Admin写的第一篇帖子]]></title>
    <url>%2F2019%2F08%2F08%2F%E7%94%A8-Hexo-Admin%E5%86%99%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%B8%96%E5%AD%90%2F</url>
    <content type="text"><![CDATA[在此输入密码，若不知，请与我联系。QQ:864814035 Incorrect Password! No content to display! U2FsdGVkX180YHLENolaOEYq9H6nergjLG/2POBTd1T7LpGozJaxoud96H5yDkDe9L5q3o1oMv4T6vCmPT18XDK4axs9H7vusZkXa9kYSBpKjGlbV0s7Obm6pW54xBuBtZeFCPm3UMhzAmIlmlAix7Kzl8g3aWGUST98UGFmY9YeNE65JAeM3j8rvYtekhWd0y7njaL6vZgrNwSfLsM1PJmDq3BVy27s2KSYZBq1B7eGFGDnGyl8qVlFc9BBsi82tDu61He8t0XajGlRiFfGcRqH1u6YZXwdeb/X6kmYgibsygMrqLWV4jV0Qa1N2gZIHbDNBfQr7o9JR1QAuA7fZH35S+Vr0raRudxGIqXbBKjYWIwh8VeMHIvm1rsCx1cs5+qq0W5pz14f4IItl8FTyf4GE8k9+3fKm344sAxzNPmwp76HhQQ2NpEtS9N8blj8/41BzK+W2yDDyxgghIC+IBN2dUOhcO2geUkPbt1Jn/5yX38kNlZBxg3Nq9m/R6Aoh8X9lBLqutY98SUBjL/ytWMQ88ihDSzAkOeTl2aT5rmF5oyr7dSZ3+NixknyVk7CKzUUyx5c3giZYPdSrNWOx7ZDpbZgCkjB+1L4kUXj2QSdx7hfMJQXSlB3ZFe39wTCwfzp6T0JPkv9dAmxaWzC6lYiq9Pk+qv43knPHUH6Es4DWr3pqfOf4bHzyqVGdqEu/2Utr6WWbiOCPbgX+ZE2bpQVPG3Jd4XB9Xll9AnGx7Y0GdZTTKmMs/dKXTkruP3rUKdPRbf0VkWTKeTcPveGqrPA7d0XSr11Pf0mU6ofVYCi+KQtqf0zoXNNbPmUFnWF]]></content>
      <tags>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2019%2F08%2F08%2Ftest%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[201906浙江工业大学计算机学院转专业二志愿机试题目]]></title>
    <url>%2F2019%2F08%2F07%2F201906%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%BA%8C%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[因为转专业可以报两个志愿，所以这次带来了二志愿的题目，难度并没有变化太多，这次很幸运通过了机试，但又倒在了面试上，遗憾之情难以言表，下次再来8 题号 题目 2097 Problem A 祝你一切顺利 2098 Problem B 字符处理机器 2099 Problem C 如何分解合数 2100 Problem D 旋转杨辉三角 2101 Problem E 铁打营盘流水兵 Problem A: 祝你一切顺利Description 很高兴你想加入计算机学院这个大家庭，在此献上学院对你的衷心祝福：无论未来有无风雨，均愿你一切如意!Input 无输入 Output 输出样本示范内容，行末回车。 Sample Output ==Wish you everything goes well in the future!== #include&lt;iostream&gt; using namespace std; int main() { cout&lt;&lt;&quot;Wish you everything goes well in the future!&quot;&lt;&lt;endl; return 0; } Problem B:字符处理机器Description 有一台字符处理机器，输入一个字符串（串长小于500），就做如下处理：1）大写字母处理为对应的小写字母，小写字母处理为对应的大写字母；2）数字字符处理为加前缀*，如‘3’加工为 *3 ;3）空格处理为’#’；4）其他字符处理为’?’。然后输出处理后的内容。请你来造一台这样的机器吧！ Input 按行输入多个字符串。 Output 对每一行字符串均按字符处理机器的要求工作，输出处理结果，行末回车。 Sample Input I'm a good student.My phone number is #123456789#AbCd &! 34y34 80 H6^7GH Sample Output i?M#A#GOOD#STUDENT?mY#PHONE#NUMBER#IS#?123456789?aBcD#???#34Y34#80#h6?*7?gh #include&lt;iostream&gt; #include&lt;cstring&gt; #include&lt;ctype.h&gt; using namespace std; int main() { char a[502]; while(gets(a)) { char tmp[1002]; int s=strlen(a); int p=0; for(int i=0;i&lt;s;i++) { if(a[i]&gt;=65&amp;&amp;a[i]&lt;=90) tmp[p++]=a[i]+32; else if(islower(a[i])!=0) tmp[p++]=a[i]-32; else if(isdigit(a[i])!=0) { tmp[p++]=&#39;*&#39;; tmp[p++]=a[i]; } else if(a[i]==&#39; &#39;) tmp[p++]=&#39;#&#39;; else tmp[p++]=&#39;?&#39;; } for(int i=0;i&lt;p;i++) cout&lt;&lt;tmp[i]; cout&lt;&lt;endl; } return 0; } Problem C:如何分解合数Description 在数学里有个基本定理：任意一个大于1的合数都可以分解成有限个素数（质数）的乘积，且分解是唯一的。证明挺麻烦，但是我们可以用计算机来验证。请你来试一试! Input 输入若干合数（>2），输入0表示输入结束。 Output 对于每个有效的正整数输入，输出其分解为若干个素数乘积的表达式，表达式因子按升序（从小到大）输出。一个表达式一行。 Sample Input ==45 36 34 18 420 0== Sample Output #include&lt;iostream&gt; using namespace std; int a(int a){ int i; for(i=2; i&lt;a; ++i) if(a%i == 0) return 0; return 1; } void F(int n) { for (int i=2; i&lt;n; ++i) if(n%i == 0) { cout&lt;&lt;i&lt;&lt;&quot;*&quot;; if(a(n/i)) { cout&lt;&lt;n/i&lt;&lt;endl; break; } else F(n/i); break; } } void f(long long n) { cout&lt;&lt;n&lt;&lt;&quot;=&quot;; for (int i=2; i&lt;n; ++i) if(n%i == 0) { cout&lt;&lt;i&lt;&lt;&quot;*&quot;; if(a(n/i)) { cout&lt;&lt;n/i&lt;&lt;endl; break; } else F(n/i); break; } } int main() { int n; while(cin&gt;&gt;n) { if(n==0) break; else f(n); } return 0; } Problem D:旋转杨辉三角Description 杨辉三角是一个由数字排列成的三角形数表。其实在杨辉记录之前是由北宋人贾宪率先使用的。因此也称为贾宪三角。贾宪三角最初用作高阶开方运算，为我们现在看到的杨辉三角旋转45度得到。现在来请你重现贾宪当年使用的模样。 Input 多行输入，每行输入一个自然数(n]]></content>
      <tags>
        <tag>转专业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[201905浙江工业大学计算机学院转专业一志愿机试题目]]></title>
    <url>%2F2019%2F08%2F07%2F201905%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2%E8%BD%AC%E4%B8%93%E4%B8%9A%E4%B8%80%E5%BF%97%E6%84%BF%E6%9C%BA%E8%AF%95%E9%A2%98%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[转专业机试结束了，发挥并不理想，自己感觉挺遗憾的，毕竟准备了很久，只能下次再来了。这次题目难度中等，与通关考相当。现在把这些题目分享出来，希望对想要转专业的朋友有帮助。如果还想继续练习的话，可以到浙工大onlinejudge练习。祝大家一路顺利，天天开心。 题号 题目 2080 Problem A 计算机学院欢迎你 2081 Problem B 破解字符串的秘密 2082 Problem C 各种数制转换问题 2083 Problem D 年月日的一个巧合 2084 Problem E 找亲密数对的游戏 Problem A: 计算机学院欢迎你Description 请让电脑表达计算机学院对你的欢迎之情吧！ Input 无输入。 Output 输出样本示范内容，行末要回车。 Sample Input 无 Sample Output ==Welcome to College of Computer Science & Technology!== 这道题就是输出一个字符串，别忘了加换行 #include&lt;iostream&gt; using namespace std; int main() { cout&lt;&lt;&quot;Welcome to College of Computer Science &amp; Technology!&quot;&lt;&lt;endl; return 0; } Problem B: 破解字符串的秘密Description 编程高手能轻松破解任意字符串的秘密：一个字符串由多少数字字符、大写字母字符、小写字母字符、空格字符、其他字符构成。你也来试试看吧！ Input 按行输入多个字符串。 Output 对每一行字符串分别统计数字字符(D)、大写字母字符(B)、小写字母字符(S)、空格字符(K)、其他字符的个数(T)，并输出。每行对应的输出以括号中的提示字母开头，然后跟统计值，行末回车。 Sample Input ==Jennie Is A Nice Girl. She Is 18 Years Old.====??Really?&*AbaC% appE !====1 a 2 A 3 $b+123== Sample Output ==D2B9S21K9T2====D0B4S10K2T7====D6B1S2K5T2== 这是一道基础的字符串处理题，注意要用gets读入整行字符串，因为字符串内包含空格，而scanf和cin遇空格会停止读入，然后遍历整个字符串就好了 #include&lt;iostream&gt; #include&lt;cstring&gt; #include&lt;ctype.h&gt; using namespace std; int main() { char p[1000]; while(gets(p))//不停读入字符串 { int s=strlen(p); int num=0; //以下五个变量用作计数器 int alpha=0; int Alpha=0; int space=0; int Else=0; for(int i=0;i&lt;s;i++)//遍历字符串 { if(isdigit(p[i])!=0)num++; if(isupper(p[i])!=0) Alpha++; if(islower(p[i])!=0) alpha++; if(p[i]==&#39; &#39;) space++; } Else=s-num-Alpha-alpha-space; //用总长减去前面的就是其他字符的数量 cout&lt;&lt;&quot;D&quot;&lt;&lt;num&lt;&lt;&quot;B&quot;&lt;&lt;Alpha&lt;&lt;&quot;S&quot;&lt;&lt;alpha&lt;&lt;&quot;K&quot;&lt;&lt;space&lt;&lt;&quot;T&quot;&lt;&lt;Else&lt;&lt;endl; } return 0; } Problem C: 各种数制转换问题Description 在数制王国里，十进制不是唯一的成员。要怎么才能把十进制数转换为其他数制里的数呢？你有办法吗？ Input 多组输入，每组输入构成为： 要转换的数制N（N不大于16的自然数） Output 每行给出的M个数，将它们统一转换成N进制数，一行一个。每组用空行分隔。 Sample Input ==2====3 1 5 8====10====2 123 56====16====2 18 4567====14====3 45 14 20== Sample Output ==1====101====1000== ==123====56== ==12====11D7== ==33====10====16== 这道题其实就三步，一是动态分配一个数组，然后输入要转换的数；二是把待转换的数转换为n进制；三是把转换后的数输出。 #include #includeusing namespace std;int main(){char o[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'}; //这个数组用与存放最大的16进制中各位所代表的字符 int n; while(cin>>n) { int m; cin>>m; int *a=new int[m];//动态分配数组 for(int i=0;i>a[i];]]></content>
      <tags>
        <tag>转专业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[about]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[在下是一名即将大二的菜鸡大学生，就读于生物技术专业。但是想要转专业去学计算机，所以用这个博客来记录下我学习的经历，希望多年以后再回忆时，不会因虚度光阴而悔恨，不会因碌碌无为而忏悔。]]></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
